// Mocks generated by Mockito 5.4.4 from annotations
// in ecommerce_concept/test/features/repositories/product_repository_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i4;

import 'package:async/async.dart' as _i2;
import 'package:ecommerce_concept/features/product/data/datasource/product_remote_datasource.dart'
    as _i3;
import 'package:ecommerce_concept/features/product/data/models/product_list_response_model.dart'
    as _i5;
import 'package:mockito/mockito.dart' as _i1;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeResult_0<T> extends _i1.SmartFake implements _i2.Result<T> {
  _FakeResult_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [ProductRemoteDataSource].
///
/// See the documentation for Mockito's code generation for more information.
class MockProductRemoteDataSource extends _i1.Mock
    implements _i3.ProductRemoteDataSource {
  MockProductRemoteDataSource() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i4.Future<_i2.Result<_i5.ProductListResponseModel>> fetchProducts({
    required int? limit,
    required int? skip,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #fetchProducts,
          [],
          {
            #limit: limit,
            #skip: skip,
          },
        ),
        returnValue: _i4.Future<_i2.Result<_i5.ProductListResponseModel>>.value(
            _FakeResult_0<_i5.ProductListResponseModel>(
          this,
          Invocation.method(
            #fetchProducts,
            [],
            {
              #limit: limit,
              #skip: skip,
            },
          ),
        )),
      ) as _i4.Future<_i2.Result<_i5.ProductListResponseModel>>);
}
