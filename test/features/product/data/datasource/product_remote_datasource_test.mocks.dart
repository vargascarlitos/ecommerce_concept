// Mocks generated by Mockito 5.4.4 from annotations
// in ecommerce_concept/test/features/product/data/datasource/product_remote_datasource_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i4;

import 'package:async/async.dart' as _i2;
import 'package:ecommerce_concept/app_config/http_client/api_client.dart'
    as _i3;
import 'package:mockito/mockito.dart' as _i1;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeResult_0<T1> extends _i1.SmartFake implements _i2.Result<T1> {
  _FakeResult_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [APIClient].
///
/// See the documentation for Mockito's code generation for more information.
class MockAPIClient extends _i1.Mock implements _i3.APIClient {
  MockAPIClient() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i4.Future<_i2.Result<T>> getRequest<T>(
    String? url, {
    required _i3.ResponseConverter<T>? converter,
    Map<String, dynamic>? queryParameters,
    Map<String, dynamic>? headers,
    bool? isIsolate = true,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #getRequest,
          [url],
          {
            #converter: converter,
            #queryParameters: queryParameters,
            #headers: headers,
            #isIsolate: isIsolate,
          },
        ),
        returnValue: _i4.Future<_i2.Result<T>>.value(_FakeResult_0<T>(
          this,
          Invocation.method(
            #getRequest,
            [url],
            {
              #converter: converter,
              #queryParameters: queryParameters,
              #headers: headers,
              #isIsolate: isIsolate,
            },
          ),
        )),
      ) as _i4.Future<_i2.Result<T>>);
}
